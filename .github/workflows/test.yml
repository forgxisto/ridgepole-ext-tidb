name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        ruby-version: ['3.1', '3.2', '3.3']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Start TiDB using docker compose
      run: |
        docker compose up -d tidb
        
    - name: Install MySQL client
      run: sudo apt-get update && sudo apt-get install -y mysql-client

    - name: Wait for TiDB to be ready
      run: |
        for i in {1..30}; do
          if mysql -h 127.0.0.1 -P 14000 -u root -e "SELECT 1" >/dev/null 2>&1; then
            echo "TiDB is ready"
            break
          fi
          echo "Waiting for TiDB... ($i/30)"
          sleep 2
        done

    - name: Create test database
      run: mysql -h 127.0.0.1 -P 14000 -u root -e "CREATE DATABASE IF NOT EXISTS ridgepole_test"

    - name: Run tests
      env:
        TIDB_HOST: 127.0.0.1
        TIDB_PORT: 14000
        TIDB_USER: root
        TIDB_PASSWORD: ""
        TIDB_DATABASE: ridgepole_test
      run: bundle exec rspec
      
    - name: Stop TiDB
      if: always()
      run: docker compose down

  basic-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true

    - name: Run basic tests (without TiDB)
      env:
        SKIP_TIDB_TESTS: 1
      run: bundle exec rspec
